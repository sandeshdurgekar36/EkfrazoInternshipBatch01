# Generated by Django 4.0.3 on 2022-05-09 06:58

from django.db import migrations, models
import django.db.models.deletion
import xmlrpc.client


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acc_holder_name', models.CharField(max_length=100)),
                ('bank', models.CharField(max_length=100)),
                ('branch', models.CharField(max_length=100)),
                ('account_no', models.IntegerField(null=True)),
                ('ifsc_code', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Coupon_name', models.CharField(max_length=100)),
                ('Coupon_discount', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Custom_user',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('company_name', models.CharField(max_length=100)),
                ('mobile_number', models.CharField(max_length=10)),
                ('email', models.EmailField(max_length=254)),
                ('alternate_number', models.IntegerField(null=True)),
                ('role_id', models.CharField(max_length=50)),
                ('city_id', models.IntegerField(null=True)),
                ('user_id', models.CharField(max_length=100)),
                ('zip_code', models.IntegerField(null=True)),
                ('adhaar_card', models.IntegerField(null=True)),
                ('password', models.IntegerField(null=True)),
                ('reset_otp', models.IntegerField(null=True)),
                ('profile_image', models.ImageField(upload_to='')),
                ('pancard', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer_address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=100)),
                ('House_number', models.IntegerField(null=True)),
                ('address', models.CharField(max_length=100)),
                ('Area', models.CharField(max_length=100)),
                ('landmark', models.CharField(max_length=100)),
                ('city_id', models.CharField(max_length=100)),
                ('zip_code', models.IntegerField(null=True)),
                ('refund', models.IntegerField(null=True)),
                ('account_table_details', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('branch', models.CharField(max_length=50)),
                ('account_no', models.IntegerField(null=True)),
                ('ifsc_code', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('driving_license_id', models.IntegerField(null=True)),
                ('badge', models.CharField(max_length=50)),
                ('owner_user_id', models.IntegerField(null=True)),
                ('user_id', models.CharField(max_length=100)),
                ('driving_license_image', models.ImageField(upload_to='')),
                ('driver_status', models.CharField(max_length=50)),
                ('vehicle_status', models.CharField(max_length=50)),
                ('license_expire_date', models.DateField(null=True)),
                ('permit_expire_date', models.DateField(null=True)),
                ('account_id', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Drop_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drop_data_time', models.CharField(blank=True, max_length=100, null=True)),
                ('drop_date', models.DateField(null=True)),
                ('drop_time', models.TimeField(null=True)),
                ('priority', models.IntegerField(null=True)),
                ('drop_id_list', models.IntegerField(null=True)),
                ('Customer_address_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.customer_address')),
            ],
        ),
        migrations.CreateModel(
            name='In_order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('final_amount', models.IntegerField(null=True)),
                ('comment', models.CharField(max_length=100)),
                ('Coupon_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.coupon')),
            ],
        ),
        migrations.CreateModel(
            name='Pickup_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pickup_data_time', models.CharField(max_length=100)),
                ('pickup_date', models.DateField(null=True)),
                ('pickup_time', models.CharField(max_length=10)),
                ('Customer_address_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.customer_address')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_stars', models.CharField(max_length=50)),
                ('review_type', models.CharField(max_length=50)),
                ('comments', models.CharField(max_length=100)),
                ('linked_id', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('State_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Status_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_plan_name', models.CharField(max_length=100)),
                ('price', models.FloatField(max_length=10)),
                ('validity_period', models.DateTimeField(verbose_name=xmlrpc.client.DateTime)),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('User_Role_Name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicleTypeName', models.CharField(max_length=100)),
                ('capacity', models.CharField(max_length=10)),
                ('size', models.CharField(max_length=10)),
                ('details', models.CharField(max_length=100)),
                ('price_per_km', models.FloatField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('vehicles_number', models.IntegerField(null=True)),
                ('vehicles_type_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Place_order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(max_length=100)),
                ('total_estimated_KM', models.IntegerField(null=True)),
                ('total_estimated_AMT', models.IntegerField(null=True)),
                ('ristrict_no_of_drop', models.IntegerField(null=True)),
                ('drop_id_list', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.drop_details')),
                ('pickup_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.pickup_details')),
                ('vehicles_type_id', models.ForeignKey(max_length=100, on_delete=django.db.models.deletion.CASCADE, to='api.vehicle')),
            ],
        ),
        migrations.CreateModel(
            name='Payment_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(null=True)),
                ('provider', models.CharField(max_length=100)),
                ('user_id', models.CharField(max_length=100, null=True)),
                ('In_order_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.in_order')),
                ('status_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.status')),
            ],
        ),
        migrations.AddField(
            model_name='in_order',
            name='Status_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.status'),
        ),
        migrations.AddField(
            model_name='in_order',
            name='driver_user_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.driver'),
        ),
        migrations.AddField(
            model_name='in_order',
            name='place_order_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.place_order'),
        ),
        migrations.AddField(
            model_name='driver',
            name='subscription_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.subscription'),
        ),
        migrations.AddField(
            model_name='driver',
            name='vehicle_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.vehicle'),
        ),
    ]
